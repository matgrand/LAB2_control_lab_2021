% state space nominal tracking (same as Lab1)
A = [0, 1; 0, -1/Tm];
B = [0; km/(gbox.N*Tm)];
C = [1, 0];

Nxu = inv([A, B; C, 0]);
Nx = [Nxu(1,3); Nxu(2,3)];
Nu = Nxu(3,3);

t_sett_5 = 0.08;
Mp = 0.1;
dump = log(1/Mp) / sqrt(pi^2 + log(1/Mp)^2);
wn = 3/(dump * t_sett_5);

p0 = (-dump*wn) + 1i*(wn*sqrt(1-dump^2));
p = [p0, conj(p0)];
K = place(A, B, p);

% Sampling time
Ts = 0.001;
% Ts = 0.01; 
% Ts = 0.05;

% FE
% Fo = 1 + Ao*Ts;
% Go = Bo*Ts;
% Ho = Co;
% Jo = Do;

% exact discretization 
sys_obs_CT = ss(Ao, Bo, Co, Do);
sys_obs_DT = c2d(sys_obs_CT, Ts, 'zoh');
[Fo, Go, Ho, Jo] = ssdata(sys_obs_DT);

% BE
% Fo = (1-Ao*Ts)^-1;
% Go = Fo*Bo*Ts;
% Ho = Co*Fo;
% Jo = Do+Co*Fo*Bo*Ts;

% Tustin
% Fo = (1+Ao*Ts/2)*(1-Ao*Ts/2)^-1;
% Go = (1-Ao*Ts/2)^-1*Bo*sqrt(Ts);
% Ho = sqrt(Ts)*Co*(1-Ao*Ts/2)^-1;
% Jo = Do+Co*(1-Ao*Ts/2)^-1*Bo*Ts*0.5;


% integral control
Ae = [[zeros(1), C]; [zeros(2,1), A]];
Be = [0; B];
Ce = [0, C];

sigma  = -dump*wn;
wd = wn*sqrt(1-dump^2);
cl_p = [sigma + 1i*wd, sigma - 1i*wd, sigma];
% cl_p = [2*sigma + 1i*wd, 2*sigma - 1i*wd, 3*sigma];
% cl_p = [sigma, sigma, sigma];
% cl_p = [1.5*sigma + 1.5*1i*wd, 0.5*sigma - 0.2*1i*wd, sigma];

Ke = acker(Ae, Be, cl_p);
K_robust = [Ke(2), Ke(3)];
Ki_robust = Ke(1);
